# [PackageDev] target_format: plist, ext: tmLanguage
---
name: logcat (-v threadtime)
scopeName: source.logcat.threadtime
fileTypes: []
uuid: fbfb3802-6282-490b-8dea-14b7dcbe7469
firstLineMatch: -* beginning of /dev/log/.*

# this is the generic format of a log
# https://regex101.com/r/eC3lI7/

# match: '(?x)^
#       (?:\s*(\d+:)\s*)?         # (optional) line number
#       ([\d-]+)\s+([\d:.]+)\s+   # date, time
#       (\d+)[-\s]+(\d+)\S*\s+    # pid, tid, package(optional)
#       ([VDIWEF])[/\s]+(.*?):\s+ # log type, log tag
#       (.*)                      # log message
#       $'
# captures:
#   '1': line number
#   '2': date
#   '3': time
#   '4': pid
#   '5': tid
#   '6': log type
#   '7': log tag (note it is non greedy)
#   '8': log message
# captures[6] and captures[8] should be of the same scope

patterns:
- include: '#verbose'
- include: '#debug'
- include: '#info'
- include: '#warn'
- include: '#error'

repository:
  verbose:
    patterns:
    - name: meta.logcat.line.verbose
      match: '(?x)^
            (?:\s*(\d+:)\s*)?
            ([\d-]+)\s+([\d:.]+)\s+
            (\d+)[-\s]+(\d+)\S*\s+
            ([V])[/\s]+(.*?):\s+
            (.*)
            $'
      captures:
        '1': {name: constant.numeric.logcat.line}
        '2': {name: string.logcat.timestamp.date}
        '3': {name: string.logcat.timestamp.time}
        '4': {name: constant.numeric.logcat.pid}
        '5': {name: constant.numeric.logcat.tid}
        '6': {name: comment.logcat.type}
        '7': {name: entity.name.tag.logcat.tag}
        '8': {name: comment.logcat.msg}

  debug:
    patterns:
    - name: meta.logcat.line.debug
      match: '(?x)^
            (?:\s*(\d+:)\s*)?
            ([\d-]+)\s+([\d:.]+)\s+
            (\d+)[-\s]+(\d+)\S*\s+
            ([D])[/\s]+(.*?):\s+
            (.*)
            $'
      captures:
        '1': {name: constant.numeric.logcat.line}
        '2': {name: string.logcat.timestamp.date}
        '3': {name: string.logcat.timestamp.time}
        '4': {name: constant.numeric.logcat.pid}
        '5': {name: constant.numeric.logcat.tid}
        '6': {name: entity.name.function.logcat.type}
        '7': {name: entity.name.tag.logcat.tag}
        '8': {name: entity.name.function.logcat.msg}

  info:
    patterns:
    - name: meta.logcat.line.info
      match: '(?x)^
            (?:\s*(\d+:)\s*)?
            ([\d-]+)\s+([\d:.]+)\s+
            (\d+)[-\s]+(\d+)\S*\s+
            ([I])[/\s]+(.*?):\s+
            (.*)
            $'
      captures:
        '1': {name: constant.numeric.logcat.line}
        '2': {name: string.logcat.timestamp.date}
        '3': {name: string.logcat.timestamp.time}
        '4': {name: constant.numeric.logcat.pid}
        '5': {name: constant.numeric.logcat.tid}
        '6': {name: entity.name.class.logcat.type}
        '7': {name: entity.name.tag.logcat.tag}
        '8': {name: entity.name.class.logcat.msg}

  warn:
    patterns:
    - name: meta.logcat.line.warn
      match: '(?x)^
            (?:\s*(\d+:)\s*)?
            ([\d-]+)\s+([\d:.]+)\s+
            (\d+)[-\s]+(\d+)\S*\s+
            ([W])[/\s]+(.*?):\s+
            (.*)
            $'
      captures:
        '1': {name: constant.numeric.logcat.line}
        '2': {name: string.logcat.timestamp.date}
        '3': {name: string.logcat.timestamp.time}
        '4': {name: constant.numeric.logcat.pid}
        '5': {name: constant.numeric.logcat.tid}
        '6': {name: keyword.logcat.type}
        '7': {name: entity.name.tag.logcat.tag}
        '8': {name: keyword.logcat.msg}

  error:
    patterns:
    - name: meta.logcat.line.error
      match: '(?x)^
            (?:\s*(\d+:)\s*)?
            ([\d-]+)\s+([\d:.]+)\s+
            (\d+)[-\s]+(\d+)\S*\s+
            ([EF])[/\s]+(.*?):\s+
            (.*)
            $'
      captures:
        '1': {name: constant.numeric.logcat.line}
        '2': {name: string.logcat.timestamp.date}
        '3': {name: string.logcat.timestamp.time}
        '4': {name: constant.numeric.logcat.pid}
        '5': {name: constant.numeric.logcat.tid}
        '6': {name: invalid.illegal.logcat.type}
        '7': {name: entity.name.tag.logcat.tag}
        '8': {name: invalid.illegal.logcat.msg}
